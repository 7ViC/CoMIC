const vrchat = require("vrchat");
require('dotenv').config()
const axios = require('axios');
const totp = require("totp-generator");
const fs = require('fs')
var path = require('path');
const createCsvWriter = require('csv-writer').createObjectCsvWriter;
const AuthenticationApi = new vrchat.AuthenticationApi(configuration, undefined, axiosConfiguration);
const FriendApi = new vrchat.FriendsApi(configuration, undefined, axiosConfiguration);
const { setTimeout: setTimeoutPromise } = require('node:timers/promises');


const configuration = new vrchat.Configuration({
    //Add your login information.
    username :  'username',
    password : 'password'
  
})
const axiosConfiguration = axios.create({
    //Add User-Agent 
    headers: {
        'User-Agent': '"AddApplicationName"/1.0 "AddYourEmail"'
    }
})

var arr = []

let absolutePath;

//The path has to be were the calling script is located.

absolutePath = path.resolve(`/home/user/Document/data/users/adduser.csv`);
instancePath = `/home/user/Document/data/users/adduser.csv`


const csvWriter = createCsvWriter({
    path: instancePath,
    header:['id']
})
let data = fs.readFileSync(absolutePath).toLocaleString();

// STRING TO ARRAY
let rows = data.split("\n"); // SPLIT ROWS
const call = async()=>{
    let login = await AuthenticationApi.getCurrentUser()
    const token = totp("addToken")

    const ver = await AuthenticationApi.verify2FA({"code":token})
    login = await AuthenticationApi.getCurrentUser()
    let max_invited = 15
    let index = 0
    for(let id of rows){
        index++ 
        if(index === max_invited ){
            break
        }
        id = id.split(",")
        try{
            let status = await FriendApi.friend(String(id[0]),undefined)
            console.log(status.data)
            if(status.data.status === 429) break
            await setTimeoutPromise(20000, "food")
        }
        catch{
            await setTimeoutPromise(20000, "food")

        }

    }
    let data_csv = []
    unused  = rows.splice(index)
    for(let rest of unused){
        rest = rest.split(",")
        data_csv.push({"id":rest[0]})
    }


    await csvWriter.writeRecords(data_csv)// returns a promise



    
}
//Recovering from any issues. 

call()

